=== Design and Implementation Plan Questions ===

Below are a few questions about how you will design your program and your
implementation plan. It is crucial to have a reasonable design and
implementation plan before you start your program. Without this, success is
unlikely. The following questions will help guide you in your thinking and
raise some important questions and issues. There is no single "right" answer
to each of the questions but there are some "wrong" answers. Some designs and
plans are better than others. The point here is for you to think about what
you're going to do.

Make a copy of this file and edit it, adding your answers then turn this
document in.

----------------------------------------------------------------------

1) What classes to you intend to create? List each of the classes and provide
a brief description of the role of that class. This list is not set in
stone. As you implement your program, if you find that you need additional
classes that are not in this list, or that something you listed here doesn't
really fit, that's ok. The point is to start thinking about the high-level
structure of your program.

DataLog data    // The main object that has the expected methods (addData() printReport()) and a single List variable
List sortList   // An object that contains a linked list of WeatherNode objects
WeatherNode     // An object that encapsulates details for weather at a given time

2) What class do you plan to implement first? Why?

WeatherNode will be developed first, because it is the bottom segment of data on the chain of command.
First I will create a simple WeatherData object to ensure that the object is able operate as one piece.
Then I will create the proper array, or linked lists in this case, of WeatherData Objects to ensure that a whole list of them will function as well.

3) How do you plan address the requirement of removing all of the records that
have the same timestamp value? Will your strategy work if there are an odd
number of records (e.g. 3) with the same timestamp value?

The more clean approach would perhaps be to scan the list after it has been properly loaded from file into an object.
Then I would scan the list and keep a counter of the number of times a particular timestamp shows up, and if the counter returns more than one integer then I move on to removing.
I would then create an overloaded remove function that removes a WeatherNode by timestamp and have it iterate through the entire list and remove a node if it's equal to the timestamp passed to the function.

4) One approach to finding the max (or min) values is to check each value as
it is being inserted into the list. If the new value is larger than the
current max (or smaller than the current minimum) then save that value as the
new max (or min). This approach will not work for this program. Why not?

Assuming the data will not always be sorted, then it is simply because by insertion not all of the list will be checked for min/max values every itteration.
Assuming that the data IS always sorted, then it is because there will be duplicate data that should be removed first, and since there are several instances of said data that must be checked in a single itteration.
Trying to sort the current value while simultaneously tring to remove a preexisting value is a poor design, and will result in hard to read/debug code.

5) What is your testing strategy? Will you only use the given data file or
will you create smaller data files to help focus your testing?

My testing strategy will be in several pieces depending on the part that I am developing/stuck on.
While I am testing the WeatherData Object, I can simply use the list since I am only reading one object from file anyways
Once that is established I can continue to use the default list to ensure that the file reader is in working order, and that the nodes are being properly added.
Afterwards, I will create a smaller list with varying situations to test the adding/sorting/removing of the list, and can create dummy points to suit testing.

6) What is your strategy for finding and addressing memory leaks? Will you get
the whole program working first and then address memory leaks or will you
check on memory leaks as you go?

Once I am at the point of dynamically adding nodes, it would be best to add certain pieces to the program bit by bit and checking for leaks after specific peices retaining to dynamic memory are added.
It's harder to create a heap of code then sort through it to fix an issue than it is to find it and know of the issue as you are adding it so you can find the issue faster and idealy create a better solution then
rather than a band-aid solution later.




